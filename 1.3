clc;
clear;
%       theta    d        a        alpha     offset

L(1) = Link([0,0,0,pi/2,0]);
L(2) = Link([-pi/2,5,0,pi/2,1]);
L(3) = Link([pi/2,5,0,-pi/2,1]);
L(4) = Link([pi/2,3,0,pi/2]);
% L(1) = Link([pi/2,3,0,-pi/2,1]);
% L(2) = Link([-pi/2,3,0,-pi/2,1]);
% L(3) = Link([0,3,1,pi/2]);
% L(4) = Link([0,3,1,pi/2]);
L(1).qlim=[-pi,pi];
L(2).qlim=[2,5];
L(3).qlim=[0,3];
L(4).qlim=[-pi,pi];
base=[ 1 0 0 0;0 1 0 0;0 0 1 0;0 0 0 1];

four_arm = SerialLink(L,'name','fourarm','base',base);

teach(four_arm); 
four_arm.plot([0 0 0 0])
hold on;
N=30000;    %随机次数

    %关节角度限制
limitmax_1 = -180;
limitmin_1 = 180.0;
limitmax_2 = 0;
limitmin_2 = 2;
limitmax_3 = 0;
limitmin_3 = 3;
limitmax_4 = -180.0;
limitmin_4 = 180.0;



theta1=(limitmin_1+(limitmax_1-limitmin_1)*rand(N,1))*pi/180; %关节1限制
theta2=(limitmin_2+(limitmax_2-limitmin_2)*rand(N,1)); %关节2限制
theta3=(limitmin_3+(limitmax_3-limitmin_3)*rand(N,1)); %关节3限制
theta4=(limitmin_4+(limitmax_4-limitmin_4)*rand(N,1))*pi/180; %关节4限制

qq=[theta1,theta2,theta3,theta4];

Mricx=four_arm.fkine(qq);
X=zeros(N,1);
Y=zeros(N,1);
Z=zeros(N,1);
for n=1:1:N
    X(n)=Mricx(n).t(1);
    Y(n)=Mricx(n).t(2);
    Z(n)=Mricx(n).t(3);

end
plot3(X,Y,Z,'b.','MarkerSize',0.5);%画出落点
hold on;
